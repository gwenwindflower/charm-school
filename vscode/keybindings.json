// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "shift+alt+d",
    "command": "workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "shift+cmd+d",
    "command": "parent_model_treeview.focus"
  },
  {
    "key": "ctrl+shift+cmd+d",
    "command": "dbtPowerUser.runCurrentModel"
  },
  {
    "key": "alt+cmd+1",
    "command": "workbench.action.terminal.focusAtIndex1"
  },
  {
    "key": "alt+cmd+2",
    "command": "workbench.action.terminal.focusAtIndex2"
  },
  {
    "key": "alt+cmd+3",
    "command": "workbench.action.terminal.focusAtIndex3"
  },
  {
    "key": "alt+cmd+4",
    "command": "workbench.action.terminal.focusAtIndex4"
  },
  {
    "key": "alt+cmd+5",
    "command": "workbench.action.terminal.focusAtIndex5"
  },
  {
    "key": "alt+cmd+6",
    "command": "workbench.action.terminal.focusAtIndex6"
  },
  {
    "key": "alt+cmd+7",
    "command": "workbench.action.terminal.focusAtIndex7"
  },
  {
    "key": "alt+cmd+8",
    "command": "workbench.action.terminal.focusAtIndex8"
  },
  {
    "key": "alt+cmd+9",
    "command": "workbench.action.terminal.focusAtIndex9"
  },
  {
    "key": "ctrl+alt+`",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  // navigate Splits vimmy style
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown"
  },
  // cycle through open editors only
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+a",
    "command": "-cursorLineStart",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "-extension.vim_ctrl+a",
    "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
  },
  {
    "key": "ctrl+cmd+a",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+cmd+j",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "alt+cmd+pagedown",
    "command": "-workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+cmd+h",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "cmd+alt+shift+i",
    "command": "editor.action.inspectTMScopes"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+cmd+e",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
  },
  {
    "key": "cmd+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "enter",
    "command": "filesExplorer.openFilePreserveFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "space",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "cmd+i",
    "command": "-emojisense.quickEmoji",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+i",
    "command": "-emojisense.quickEmojiTerminal",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+i",
    "command": "-emojisense.quickEmojitextTerminal",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+i",
    "command": "-emojisense.quickEmojitext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+cmd+]",
    "command": "dendron.goNextHierarchy",
    "when": "dendron:pluginActive && editorFocus"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-dendron.goNextHierarchy",
    "when": "dendron:pluginActive && editorFocus"
  },
  {
    "key": "ctrl+cmd+[",
    "command": "dendron.goPrevHierarchy",
    "when": "dendron:pluginActive && editorFocus"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-dendron.goPrevHierarchy",
    "when": "dendron:pluginActive && editorFocus"
  },
  {
    "key": "ctrl+cmd+enter",
    "command": "markdown-checkbox.createCheckbox",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "-markdown-checkbox.createCheckbox",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+cmd+v",
    "command": "dendron.togglePreview",
    "when": "dendron:pluginActive"
  },
  {
    "key": "ctrl+cmd+p",
    "command": "-dendron.togglePreview",
    "when": "dendron:pluginActive"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "alt+/",
    "command": "-bujo.symbol.setSymbol",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+alt+enter",
    "command": "python.execInTerminal-icon"
  },
  {
    "key": "ctrl+cmd+p",
    "command": "-dendron.showLegacyPreview",
    "when": "dendron:hasLegacyPreview && dendron:pluginActive"
  },
  {
    "key": "shift+cmd+k",
    "command": "dendron.backlinks.focus"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+a shift+\\",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+cmd+p",
    "command": "projectManager.listProjects"
  },
  {
    "key": "alt+cmd+p",
    "command": "-projectManager.listProjects"
  },
  {
    "key": "ctrl+a x",
    "command": "workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "ctrl+a x",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+a c",
    "command": "workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+a t",
    "command": "workbench.action.createTerminalEditorSide"
  },
  {
    "key": "shift+alt+h",
    "command": "workbench.action.increaseViewWidth"
  },
  {
    "key": "shift+alt+l",
    "command": "workbench.action.decreaseViewWidth"
  },
  {
    "key": "ctrl+cmd+r",
    "command": "notebook.execute"
  },
  {
    "key": "ctrl+enter",
    "command": "quarto.runCurrentCell",
    "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'quarto'"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-quarto.runCurrentCell",
    "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'quarto'"
  },
  {
    "key": "cmd+,",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "cmd+,",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "ctrl+cmd+k",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "alt+cmd+pageup",
    "command": "-workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+a n",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.action.terminal.clear",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+a ,",
    "command": "workbench.action.terminal.rename"
  }
]
